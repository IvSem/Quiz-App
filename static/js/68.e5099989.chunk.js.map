{"version":3,"file":"static/js/68.e5099989.chunk.js","mappings":"+SA2GA,EAjGsB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAMIC,EAAAA,EAAAA,IAAYC,EAAAA,IALfC,EADD,EACCA,kBACAC,EAFD,EAECA,oBACAC,EAHD,EAGCA,cACAC,EAJD,EAICA,mBACAC,EALD,EAKCA,MAGKC,EAAM,yBAAqBF,GAArB,OACXH,EAAiB,oBAAgBA,GAAsB,IAD5C,OAETC,EAAmB,sBAAkBA,GAAwB,IAFpD,OAGXC,EAAa,gBAAYA,GAAkB,IAG5C,GAAuCI,EAAAA,EAAAA,GAAS,CAAEC,IAAKF,IAA/CG,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,WAEzBC,EAAAA,EAAAA,YAAU,WACT,IAAY,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUI,QAAQC,QAAS,EAAG,CACjC,IAAMC,EAAWN,EAASI,QAAQlB,GAC9BqB,GAAO,OAAOD,EAASE,mBAC3BD,EAAQE,QCnCiBC,EDoCXJ,EAASE,kBAAkBH,OCnCpCM,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KDoC1C,EACAJ,EAASQ,gBAEVzB,EAAWkB,EACX,CCzCyB,IAAAG,CD0C1B,GAAE,CAACV,EAAUd,IAEd,IAAM6B,EAAoB,SAAAC,GACzB,IAAMV,EAAWN,EAASI,QAAQlB,GAC9B8B,EAAEC,OAAOC,cAAgBZ,EAASQ,gBACrCjC,GAASsC,EAAAA,EAAAA,IAAYvB,EAAQ,IAE1BV,EAAe,EAAIc,EAASI,QAAQC,OACvClB,EAAgBD,EAAe,GAE/BH,EAAS,WAEV,EAED,OACC,UAACqC,EAAA,EAAD,CACCC,GAAI,EACJC,UAAU,SACVC,GAAI,CACHC,OAAQ,SAJV,UAOEtB,IAAa,SAAC,KAAD,KAEZA,IAAcD,IACf,iCACC,UAACwB,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBACWxC,EAAe,EAD1B,MACgCc,EAASI,QAAQC,WAEjD,SAACoB,EAAA,EAAD,CAAYE,GAAI,EAAGD,QAAQ,KAA3B,UACEE,EAAAA,EAAAA,QAAO5B,EAASI,QAAQlB,GAAcoB,aAGxC,SAACc,EAAA,EAAD,CACCO,GAAI,EACJE,MAAO,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,MAAOC,GAAI,OAChDC,GAAG,OAHJ,UAKC,SAACC,EAAA,EAAD,CAAOC,QAAS,EAAhB,SACEhD,EAAQiD,KAAI,SAAAC,GAAE,OACd,SAACC,EAAA,EAAD,CAEChB,GAAI,CACHiB,GAAI,EACJC,GAAI,EACJC,SAAU,OACVC,MAAO,YACPC,aAAc,kBACdC,gBAAiB,aAElBC,KAAK,SACLpB,QAAQ,OACRqB,QAAShC,EAZV,UAcEa,EAAAA,EAAAA,QAAOU,IAbHA,EAFQ,aAwBrB,C","sources":["pages/QuestionsPage/QuestionsPage.jsx","helpers/functions.js"],"sourcesContent":["import { Box, Button, Stack, Typography } from '@mui/material';\nimport { Loader } from 'components';\nimport { getRandomInt } from 'helpers/functions';\nimport { useAxios } from 'hooks';\nimport { decode } from 'html-entities';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { changeScore, selectQuestions } from 'redux/questions/slice/slice';\n\nconst QuestionsPage = () => {\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\tconst [currentIndex, setCurrentIndex] = useState(0);\n\tconst [options, setOptions] = useState([]);\n\tconst {\n\t\tquestion_category,\n\t\tquestion_difficulty,\n\t\tquestion_type,\n\t\tamount_of_question,\n\t\tscore,\n\t} = useSelector(selectQuestions);\n\n\tconst apiUrl = `api.php?amount=${amount_of_question}${\n\t\tquestion_category ? `&category=${question_category}` : ''\n\t}${question_difficulty ? `&difficulty=${question_difficulty}` : ''}${\n\t\tquestion_type ? `&type=${question_type}` : ''\n\t}`;\n\n\tconst { response, error, isLoading } = useAxios({ url: apiUrl });\n\n\tuseEffect(() => {\n\t\tif (response?.results.length > 0) {\n\t\t\tconst question = response.results[currentIndex];\n\t\t\tlet answers = [...question.incorrect_answers];\n\t\t\tanswers.splice(\n\t\t\t\tgetRandomInt(question.incorrect_answers.length),\n\t\t\t\t0,\n\t\t\t\tquestion.correct_answer\n\t\t\t);\n\t\t\tsetOptions(answers);\n\t\t}\n\t}, [response, currentIndex]);\n\n\tconst handleClickAnswer = e => {\n\t\tconst question = response.results[currentIndex];\n\t\tif (e.target.textContent === question.correct_answer) {\n\t\t\tdispatch(changeScore(score + 1));\n\t\t}\n\t\tif (currentIndex + 1 < response.results.length) {\n\t\t\tsetCurrentIndex(currentIndex + 1);\n\t\t} else {\n\t\t\tnavigate('/results');\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box\n\t\t\tpt={5}\n\t\t\ttextAlign=\"center\"\n\t\t\tsx={{\n\t\t\t\theight: '100vh',\n\t\t\t}}\n\t\t>\n\t\t\t{isLoading && <Loader />}\n\n\t\t\t{!isLoading && !error && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\tQuestion {currentIndex + 1} / {response.results.length}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography mt={3} variant=\"h6\">\n\t\t\t\t\t\t{decode(response.results[currentIndex].question)}\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Box\n\t\t\t\t\t\tmt={3}\n\t\t\t\t\t\twidth={{ xs: '100%', sm: '100%', md: '75%', lg: '50%' }}\n\t\t\t\t\t\tmx=\"auto\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Stack spacing={3}>\n\t\t\t\t\t\t\t{options.map(el => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tkey={el}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tpy: 1,\n\t\t\t\t\t\t\t\t\t\tpx: 1,\n\t\t\t\t\t\t\t\t\t\tfontSize: '20px',\n\t\t\t\t\t\t\t\t\t\tcolor: '#2a2a2a\t',\n\t\t\t\t\t\t\t\t\t\tborderBottom: '1px solid black',\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#b5ece99c',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\t\t\tonClick={handleClickAnswer}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{decode(el)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Box>\n\t);\n};\n\nexport default QuestionsPage;\n","export const getRandomInt = max => {\n\treturn Math.floor(Math.random() * Math.floor(max));\n};\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useState","currentIndex","setCurrentIndex","options","setOptions","useSelector","selectQuestions","question_category","question_difficulty","question_type","amount_of_question","score","apiUrl","useAxios","url","response","error","isLoading","useEffect","results","length","question","answers","incorrect_answers","splice","max","Math","floor","random","correct_answer","handleClickAnswer","e","target","textContent","changeScore","Box","pt","textAlign","sx","height","Typography","variant","mt","decode","width","xs","sm","md","lg","mx","Stack","spacing","map","el","Button","py","px","fontSize","color","borderBottom","backgroundColor","type","onClick"],"sourceRoot":""}